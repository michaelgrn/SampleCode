Mucun Tian
Michael Green

# Text Generation

## Files
1. jupyter notebooks:

* `char-based-generator.ipynb`: char-based model of text generations.
* `word-based-generator.ipynb`: word-based model of text generations.
* `text-simplification.ipynb`: dictionary-based model of text simplification.

2. Data:

* `nyt-snippet-subsets.txt`: sentence snippet of New York Times 
* `wonderland.txt`: Alice's Adventure Wonderland
* `build` folder: Trained weights and generated texts
* 'generated-texts': A folder of all texts generated by char and word based models.

## Requirements

* Anaconda, python=3.5.6, numpy=1.16.2, pandas=0.24.2, tensorflow(-gpu)=1.12.0, keras(-gpu)=2.2.4, nltk=3.3.0, jupyter notebook=5.6.0, cudatoolkit=9.0, cudnn=7.3.1, tqdm=4.31.1,
textstat=0.5.6, gensim=3.7.2, six=1.12.0, spicy=1.1.0, smart-open=1.8.2.
## Configuration

* Install Anaconda with python 3.5.6.
* Install cudatoolkit by: `conda install cudatoolkit=9.0 cudnn=7.3.1`
* Install required packages by: `conda install package_list_above=its_version`

## Run

* Re-Train: Run each `*.ipynb` file from top to bottom to get all the results.
* Generate text: Run each `*.ipynb` file from check point to the end.
* Generate simpilfications: make sure text-simplification is in the generated-texts folder. Run from top to bottom to get results.